name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: false # Prevents ongoing deployments from being canceled

env:
  SERVER_ADDR: ${{ secrets.SERVER_ADDR }}

jobs:
  deploy:
    runs-on: cruizba/ubuntu-dind

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    environment: production

    env:
      DOCKER_BUILDKIT: 1
      NODE_ENV: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.0
          bundler-cache: true
          cache-version: "tools-v1-${{ runner.os }}"

      - name: Install dependencies
        run: gem install kamal -v "1.9.2"

      - name: Set up Docker Buildx for cache
        uses: docker/setup-buildx-action@v3

      - name: Expose GitHub Runtime for cache
        uses: crazy-max/ghaction-github-runtime@v3

      - name: Set up SSH connection
        run: |
          # Create SSH directory and write the private key
          mkdir -p ~/.ssh && echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
          # Enable current SSH key
          eval $(ssh-agent -s) && ssh-add ~/.ssh/id_rsa
          # Add the server to known_hosts (use `-p 2222` for custom port if needed)
          ssh-keyscan $SERVER_ADDR >> ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.KAMAL_SSH_PRIVATE_KEY }}

      - name: Deploy with Kamal
        run: kamal deploy
        env:
          NODE_ENV: ${{ env.NODE_ENV }}
          KAMAL_REGISTRY_PASSWORD: ${{ secrets.TOKEN }}
          KAMAL_REGISTRY_USERNAME: ${{ github.actor }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          SERVER_ADDR: ${{ secrets.SERVER_ADDR }}

